#include <stdio.h>
#include <stdlib.h>


int main(){

	int c, n, j, k, faturamento, p, q;

	while((scanf("%d", &c)) != EOF){
		scanf("%d", &n);

		int i = 0, t = 0, u = 0, vdd = 1;

		int *placa = (int *)malloc(n * sizeof(int));
		int *quant = (int *)malloc(n * sizeof(int));
		int *ferro_velho_placa = (int *)malloc(n * sizeof(int));
		int *ferro_velho_quant = (int *)malloc(n * sizeof(int));

		int cont = 0, tam = c;
		char caracter;

		while(i < n){
			vdd = 1;
			scanf("%c", &caracter);;
			if(caracter == 'C'){
				i += 1;
				scanf("%d", &p);
				scanf("%d", &q);
				if(tam >= q){
					for(k = 0; k < t; k++){
						if(placa[k] == p){
							placa[k] = 0;
							quant[k] = 0;
							vdd = 0;
							break;
						}
					}if(vdd == 1){
						cont += 1;
						tam -= q;
						//printf("%d\n", tam);
						placa[t] = p;
						quant[t] = q;
						t += 1;
					}
				}vdd = 1;
				if(tam < q){
					for(k = 0; k < u; k++){
						if(ferro_velho_placa[k] == p){
							vdd = 0;
							for(j = 0; j < t; j++){
								if(placa[k] == p){
									vdd = 0;
									break;
								}
							}
						}

					}if(vdd == 1){
						ferro_velho_placa[u] = p;
						ferro_velho_quant[u] = q;
						u += 1;
					}
				}
			}if(caracter == 'S'){
				i += 1;
				scanf("%d", &p);
				for(j = 0; j < t; j++){
					if(placa[j] == p){
						vdd = 0;
						tam += quant[j];
						//printf("%d\n", tam);
						placa[j] = 0;
						quant[j] = 0;
						break;
					}
				}if(vdd == 1){
					for(k = 0; k < u; k++){
						if(ferro_velho_placa[k] == p){
							//printf("%d\n", ferro_velho_quant[k]);
							tam -= ferro_velho_quant[k];
							tam += ferro_velho_quant[k];
							//printf("%d\n", tam);
							ferro_velho_placa[k] = 0;
							ferro_velho_quant[k] = 0;
							cont += 1;
							break;

						}
					}

				}
			}

		}
		for(k = 0; k < t; k++){
			printf("%d ", placa[k]);
		}
		printf("\n");
		for(k = 0; k < u; k++){
			printf("%d ", ferro_velho_placa[k]);
		}
		printf("\n");
		faturamento = cont * 10;
		printf("%d\n", faturamento);
		printf("Termina com tamanho: %d\n", tam);

		free(placa);
		placa = NULL;
		free(quant);
		quant = NULL;
		free(ferro_velho_placa);
		ferro_velho_placa = NULL;
		free(ferro_velho_quant);
		ferro_velho_quant = NULL;

	}

	return 0;
}
